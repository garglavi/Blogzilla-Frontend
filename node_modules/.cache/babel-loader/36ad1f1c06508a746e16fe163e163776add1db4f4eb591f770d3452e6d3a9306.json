{"ast":null,"code":"var _jsxFileName = \"D:\\\\LAVI\\\\Blog FSD\\\\frontend\\\\blogzilla_frontend\\\\src\\\\components\\\\NewFeed.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { loadAllPosts } from '../services/post-service';\nimport { Row, Col, Pagination, PaginationItem, PaginationLink, Container } from 'reactstrap';\nimport Post from './Post';\nimport { toast } from 'react-toastify';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { deletePostService } from '../services/post-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewFeed() {\n  _s();\n  const [postContent, setPostContent] = useState({\n    content: [],\n    totalPages: '',\n    totalElements: '',\n    pageSize: '',\n    lastPage: false,\n    pageNumber: ''\n  });\n  const [currentPage, setCurrentPage] = useState(0);\n  useEffect(() => {\n    console.log(\"loading posts\");\n    console.log(currentPage);\n    changePage(currentPage);\n  }, [currentPage]);\n  const changePage = (pageNumber = 0, pageSize = 5) => {\n    if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n      return;\n    }\n    if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\n      return;\n    }\n    loadAllPosts(pageNumber, pageSize).then(data => {\n      setPostContent({\n        content: [...postContent.content, ...data.content],\n        totalPages: data.totalPages,\n        totalElements: data.totalElements,\n        pageSize: data.pageSize,\n        lastPage: data.lastPage,\n        pageNumber: data.pageNumber\n      });\n      console.log(data);\n    }).catch(error => {\n      toast.error(\"Error in loading posts\");\n    });\n  };\n  function deletePost(post) {\n    //going to delete post\n    console.log(post);\n    deletePostService(post.postId).then(res => {\n      console.log(res);\n      toast.success(\"post is deleled..\");\n      let newPostContents = postContent.content.filter(p => p.postId != post.postId);\n      setPostContent({\n        ...postContent,\n        content: newPostContents\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"error in deleting post\");\n    });\n  }\n  const changePageInfinite = () => {\n    console.log(\"page chagned\");\n    setCurrentPage(currentPage + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: [\"Blogs Count  ( \", postContent === null || postContent === void 0 ? void 0 : postContent.totalElements, \" )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(InfiniteScroll, {\n          dataLength: postContent.content.length,\n          next: changePageInfinite,\n          hasMore: !postContent.lastPage,\n          loader: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"Loading...\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 33\n          }, this),\n          endMessage: /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              textAlign: 'center'\n            },\n            children: /*#__PURE__*/_jsxDEV(\"b\", {\n              children: \"Yay! You have seen it all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this),\n          children: postContent.content.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n            deletePost: deletePost,\n            post: post\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(NewFeed, \"zZEP7FKLO1Xnb4q25GW38CNZsMk=\");\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useState","useEffect","loadAllPosts","Row","Col","Pagination","PaginationItem","PaginationLink","Container","Post","toast","InfiniteScroll","deletePostService","jsxDEV","_jsxDEV","NewFeed","_s","postContent","setPostContent","content","totalPages","totalElements","pageSize","lastPage","pageNumber","currentPage","setCurrentPage","console","log","changePage","then","data","catch","error","deletePost","post","postId","res","success","newPostContents","filter","p","changePageInfinite","className","children","md","size","fileName","_jsxFileName","lineNumber","columnNumber","dataLength","length","next","hasMore","loader","endMessage","style","textAlign","map","index","_c","$RefreshReg$"],"sources":["D:/LAVI/Blog FSD/frontend/blogzilla_frontend/src/components/NewFeed.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { loadAllPosts } from '../services/post-service'\r\nimport { Row, Col, Pagination, PaginationItem, PaginationLink, Container } from 'reactstrap'\r\nimport Post from './Post'\r\nimport { toast } from 'react-toastify'\r\nimport InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { deletePostService } from '../services/post-service'\r\nfunction NewFeed() {\r\n\r\n\r\n    const [postContent, setPostContent] = useState({\r\n        content: [],\r\n        totalPages: '',\r\n        totalElements: '',\r\n        pageSize: '',\r\n        lastPage: false,\r\n        pageNumber: ''\r\n\r\n    })\r\n\r\n    const [currentPage, setCurrentPage] = useState(0)\r\n\r\n    useEffect(() => {\r\n        console.log(\"loading posts\")\r\n        console.log(currentPage)\r\n        changePage(currentPage)\r\n\r\n    }, [currentPage])\r\n\r\n\r\n    const changePage = (pageNumber = 0, pageSize = 5) => {\r\n        if (pageNumber > postContent.pageNumber && postContent.lastPage) {\r\n            return\r\n        }\r\n        if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\r\n            return\r\n        }\r\n        loadAllPosts(pageNumber, pageSize).then(data => {\r\n            setPostContent({\r\n                content: [...postContent.content, ...data.content],\r\n                totalPages: data.totalPages,\r\n                totalElements: data.totalElements,\r\n                pageSize: data.pageSize,\r\n                lastPage: data.lastPage,\r\n                pageNumber: data.pageNumber\r\n            })\r\n\r\n            console.log(data);\r\n\r\n        }).catch(error => {\r\n            toast.error(\"Error in loading posts\")\r\n\r\n        })\r\n    }\r\n\r\n\r\n\r\n    function deletePost(post) {\r\n        //going to delete post\r\n        console.log(post)\r\n\r\n        deletePostService(post.postId).then(res => {\r\n            console.log(res)\r\n            toast.success(\"post is deleled..\")\r\n\r\n            let newPostContents = postContent.content.filter(p => p.postId != post.postId)\r\n            setPostContent({ ...postContent, content: newPostContents })\r\n\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n                toast.error(\"error in deleting post\")\r\n            })\r\n    }\r\n\r\n\r\n    const changePageInfinite = () => {\r\n        console.log(\"page chagned\")\r\n        setCurrentPage(currentPage + 1)\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Row>\r\n                <Col md={\r\n                    {\r\n                        size: 12\r\n\r\n                    }\r\n                }>\r\n\r\n                    <h1>Blogs Count  ( {postContent?.totalElements} )</h1>\r\n                    <InfiniteScroll\r\n                        dataLength={postContent.content.length}\r\n                        next={changePageInfinite}\r\n                        hasMore={!postContent.lastPage}\r\n                        loader={<h4>Loading...</h4>}\r\n                        endMessage={\r\n                            <p style={{ textAlign: 'center' }}>\r\n                                <b>Yay! You have seen it all</b>\r\n                            </p>\r\n                        }\r\n                    >\r\n                        {\r\n                            postContent.content.map((post, index) => (\r\n                                <Post deletePost={deletePost} post={post} key={index} />\r\n                            ))\r\n                        }\r\n\r\n                    </InfiniteScroll>\r\n                    {/* <Container className='mt-3'>\r\n                        <Pagination size='lg'>\r\n                            <PaginationItem onClick={() => changePage(postContent.pageNumber-1)} disabled={postContent.pageNumber == 0}>\r\n                                <PaginationLink previous>\r\n                                    Previous\r\n                                </PaginationLink>\r\n                            </PaginationItem>\r\n\r\n                            {\r\n                                [...Array(postContent.totalPages)].map((item, index) => (\r\n\r\n\r\n                                    <PaginationItem onClick={() => changePage(index)} active={index == postContent.pageNumber} key={index}>\r\n                                        <PaginationLink>\r\n\r\n                                            {index + 1}\r\n\r\n                                        </PaginationLink>\r\n                                    </PaginationItem>\r\n\r\n                                ))\r\n                            }\r\n\r\n\r\n                            <PaginationItem onClick={() => changePage(postContent.pageNumber+1)} disabled={postContent.lastPage}>\r\n                                <PaginationLink next>\r\n                                    Next\r\n                                </PaginationLink>\r\n                            </PaginationItem>\r\n                        </Pagination>\r\n\r\n                    </Container> */}\r\n\r\n\r\n\r\n\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default NewFeed"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}