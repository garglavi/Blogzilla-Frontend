{"ast":null,"code":"var _jsxFileName = \"D:\\\\LAVI\\\\Blog FSD\\\\frontend\\\\blogzilla_frontend\\\\src\\\\components\\\\NewFeed.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { loadAllPosts } from '../services/post-service';\nimport { Row, Col } from 'reactstrap';\nimport Post from './Post';\nimport { toast } from 'react-toastify';\n//import InfiniteScroll from 'react-infinite-scroll-component'\nimport { deletePostService } from '../services/post-service';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction NewFeed() {\n  _s();\n  const [postContent, setPostContent] = useState({\n    content: [],\n    //totalPages: '',\n    totalElements: ''\n    // pageSize: '',\n    // lastPage: false,\n    // pageNumber: ''\n  });\n\n  // const [currentPage, setCurrentPage] = useState(0)\n\n  // useEffect(() => {\n  //     console.log(\"loading posts\")\n  //     console.log(currentPage)\n  //     changePage(currentPage)\n\n  // }, [currentPage])\n\n  // const changePage = (pageNumber = 0, pageSize = 5) => {\n  // if (pageNumber > postContent.pageNumber && postContent.lastPage) {\n  //     return\n  // }\n  // if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\n  //     return\n  // }\n  loadAllPosts().then(data => {\n    console.log(\"first\" + data);\n    setPostContent({\n      content: [...postContent.content, ...data.content],\n      //totalPages: data.totalPages,\n      totalElements: data.totalElements\n      //pageSize: data.pageSize,\n      //lastPage: data.lastPage,\n      // pageNumber: data.pageNumber\n    });\n    console.log(\"Second:\" + data);\n  }).catch(error => {\n    toast.error(\"Error in loading posts\");\n  });\n  //}\n\n  function deletePost(post) {\n    //going to delete post\n    console.log(post);\n    deletePostService(post.postId).then(res => {\n      console.log(res);\n      toast.success(\"post is deleted..\");\n      let newPostContents = postContent.content.filter(p => p.postId !== post.postId);\n      setPostContent({\n        ...postContent,\n        content: newPostContents\n      });\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"error in deleting post\");\n    });\n  }\n\n  // const changePageInfinite = () => {\n  //     console.log(\"page chagned\")\n  //     setCurrentPage(currentPage + 1)\n\n  // }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container-fluid\",\n    children: /*#__PURE__*/_jsxDEV(Row, {\n      children: /*#__PURE__*/_jsxDEV(Col, {\n        md: {\n          size: 12\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          style: {\n            color: '#003366'\n          },\n          children: [\"Blogs Count  ( \", postContent === null || postContent === void 0 ? void 0 : postContent.totalElements, \" )\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 21\n        }, this), postContent.content.map((post, index) => /*#__PURE__*/_jsxDEV(Post, {\n          deletePost: deletePost,\n          post: post\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 33\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 9\n  }, this);\n}\n_s(NewFeed, \"bc5yi4yc2Fc3YmNBLfv6EI6Po2k=\");\n_c = NewFeed;\nexport default NewFeed;\nvar _c;\n$RefreshReg$(_c, \"NewFeed\");","map":{"version":3,"names":["React","useState","useEffect","loadAllPosts","Row","Col","Post","toast","deletePostService","jsxDEV","_jsxDEV","NewFeed","_s","postContent","setPostContent","content","totalElements","then","data","console","log","catch","error","deletePost","post","postId","res","success","newPostContents","filter","p","className","children","md","size","style","color","fileName","_jsxFileName","lineNumber","columnNumber","map","index","_c","$RefreshReg$"],"sources":["D:/LAVI/Blog FSD/frontend/blogzilla_frontend/src/components/NewFeed.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { loadAllPosts } from '../services/post-service'\r\nimport { Row, Col} from 'reactstrap'\r\nimport Post from './Post'\r\nimport { toast } from 'react-toastify'\r\n//import InfiniteScroll from 'react-infinite-scroll-component'\r\nimport { deletePostService } from '../services/post-service'\r\nfunction NewFeed() {\r\n\r\n\r\n    const [postContent, setPostContent] = useState({\r\n        content: [],\r\n        //totalPages: '',\r\n        totalElements: '',\r\n       // pageSize: '',\r\n       // lastPage: false,\r\n       // pageNumber: ''\r\n\r\n    })\r\n\r\n   // const [currentPage, setCurrentPage] = useState(0)\r\n\r\n    // useEffect(() => {\r\n    //     console.log(\"loading posts\")\r\n    //     console.log(currentPage)\r\n    //     changePage(currentPage)\r\n\r\n    // }, [currentPage])\r\n\r\n\r\n   // const changePage = (pageNumber = 0, pageSize = 5) => {\r\n        // if (pageNumber > postContent.pageNumber && postContent.lastPage) {\r\n        //     return\r\n        // }\r\n        // if (pageNumber < postContent.pageNumber && postContent.pageNumber == 0) {\r\n        //     return\r\n        // }\r\n        loadAllPosts().then(data => {\r\n            console.log(\"first\"+data);\r\n            setPostContent({\r\n                content: [...postContent.content, ...data.content],\r\n                //totalPages: data.totalPages,\r\n                totalElements: data.totalElements,\r\n                //pageSize: data.pageSize,\r\n                //lastPage: data.lastPage,\r\n               // pageNumber: data.pageNumber\r\n            })\r\n            console.log(\"Second:\"+data);\r\n\r\n        }).catch(error => {\r\n            toast.error(\"Error in loading posts\")\r\n\r\n        })\r\n    //}\r\n\r\n\r\n\r\n    function deletePost(post) {\r\n        //going to delete post\r\n        console.log(post)\r\n\r\n        deletePostService(post.postId).then(res => {\r\n            console.log(res)\r\n            toast.success(\"post is deleted..\")\r\n\r\n            let newPostContents = postContent.content.filter(p => p.postId !== post.postId)\r\n            setPostContent({ ...postContent, content: newPostContents })\r\n\r\n        })\r\n            .catch(error => {\r\n                console.log(error)\r\n                toast.error(\"error in deleting post\")\r\n            })\r\n    }\r\n\r\n\r\n    // const changePageInfinite = () => {\r\n    //     console.log(\"page chagned\")\r\n    //     setCurrentPage(currentPage + 1)\r\n\r\n    // }\r\n\r\n    return (\r\n        <div className=\"container-fluid\">\r\n            <Row>\r\n                <Col md={{ size: 12 }}>\r\n\r\n                    <h2 style={{ color: '#003366' }}>Blogs Count  ( {postContent?.totalElements} )</h2>\r\n                    {/* <InfiniteScroll\r\n                        // dataLength={postContent.content.length}\r\n                        // next={changePageInfinite}\r\n                        // hasMore={!postContent.lastPage}\r\n                        // loader={<h4 style={{ color: '#003366' }}>Loading...</h4>}\r\n                        // endMessage={\r\n                        //     <p style={{ textAlign: 'center', color: '#003366' }}>\r\n                        //         <b>Yay! You have seen it all</b>\r\n                        //     </p>\r\n                        // }\r\n                    > */}\r\n                        {\r\n                            postContent.content.map((post, index) => (\r\n                                <Post deletePost={deletePost} post={post} key={index} />\r\n                            ))\r\n                        }\r\n\r\n                    {/* </InfiniteScroll> */}\r\n\r\n\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default NewFeed"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,SAASC,SAAS,QAAQ,OAAO;AACjC,SAASC,YAAY,QAAQ,0BAA0B;AACvD,SAASC,GAAG,EAAEC,GAAG,QAAO,YAAY;AACpC,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,KAAK,QAAQ,gBAAgB;AACtC;AACA,SAASC,iBAAiB,QAAQ,0BAA0B;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAC5D,SAASC,OAAOA,CAAA,EAAG;EAAAC,EAAA;EAGf,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGb,QAAQ,CAAC;IAC3Cc,OAAO,EAAE,EAAE;IACX;IACAC,aAAa,EAAE;IAChB;IACA;IACA;EAEH,CAAC,CAAC;;EAEH;;EAEC;EACA;EACA;EACA;;EAEA;;EAGD;EACK;EACA;EACA;EACA;EACA;EACA;EACAb,YAAY,CAAC,CAAC,CAACc,IAAI,CAACC,IAAI,IAAI;IACxBC,OAAO,CAACC,GAAG,CAAC,OAAO,GAACF,IAAI,CAAC;IACzBJ,cAAc,CAAC;MACXC,OAAO,EAAE,CAAC,GAAGF,WAAW,CAACE,OAAO,EAAE,GAAGG,IAAI,CAACH,OAAO,CAAC;MAClD;MACAC,aAAa,EAAEE,IAAI,CAACF;MACpB;MACA;MACD;IACH,CAAC,CAAC;IACFG,OAAO,CAACC,GAAG,CAAC,SAAS,GAACF,IAAI,CAAC;EAE/B,CAAC,CAAC,CAACG,KAAK,CAACC,KAAK,IAAI;IACdf,KAAK,CAACe,KAAK,CAAC,wBAAwB,CAAC;EAEzC,CAAC,CAAC;EACN;;EAIA,SAASC,UAAUA,CAACC,IAAI,EAAE;IACtB;IACAL,OAAO,CAACC,GAAG,CAACI,IAAI,CAAC;IAEjBhB,iBAAiB,CAACgB,IAAI,CAACC,MAAM,CAAC,CAACR,IAAI,CAACS,GAAG,IAAI;MACvCP,OAAO,CAACC,GAAG,CAACM,GAAG,CAAC;MAChBnB,KAAK,CAACoB,OAAO,CAAC,mBAAmB,CAAC;MAElC,IAAIC,eAAe,GAAGf,WAAW,CAACE,OAAO,CAACc,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACL,MAAM,KAAKD,IAAI,CAACC,MAAM,CAAC;MAC/EX,cAAc,CAAC;QAAE,GAAGD,WAAW;QAAEE,OAAO,EAAEa;MAAgB,CAAC,CAAC;IAEhE,CAAC,CAAC,CACGP,KAAK,CAACC,KAAK,IAAI;MACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;MAClBf,KAAK,CAACe,KAAK,CAAC,wBAAwB,CAAC;IACzC,CAAC,CAAC;EACV;;EAGA;EACA;EACA;;EAEA;;EAEA,oBACIZ,OAAA;IAAKqB,SAAS,EAAC,iBAAiB;IAAAC,QAAA,eAC5BtB,OAAA,CAACN,GAAG;MAAA4B,QAAA,eACAtB,OAAA,CAACL,GAAG;QAAC4B,EAAE,EAAE;UAAEC,IAAI,EAAE;QAAG,CAAE;QAAAF,QAAA,gBAElBtB,OAAA;UAAIyB,KAAK,EAAE;YAAEC,KAAK,EAAE;UAAU,CAAE;UAAAJ,QAAA,GAAC,iBAAe,EAACnB,WAAW,aAAXA,WAAW,uBAAXA,WAAW,CAAEG,aAAa,EAAC,IAAE;QAAA;UAAAqB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,EAa3E3B,WAAW,CAACE,OAAO,CAAC0B,GAAG,CAAC,CAACjB,IAAI,EAAEkB,KAAK,kBAChChC,OAAA,CAACJ,IAAI;UAACiB,UAAU,EAAEA,UAAW;UAACC,IAAI,EAAEA;QAAK,GAAMkB,KAAK;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAC1D,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAId;AAAC5B,EAAA,CA3GQD,OAAO;AAAAgC,EAAA,GAAPhC,OAAO;AA6GhB,eAAeA,OAAO;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}