{"ast":null,"code":"import axios from \"axios\";\n//import { getToken } from \"../auth\";\n\nexport const BASE_URL = \"http://localhost:9090/api\";\nexport const myAxios = axios.create({\n  baseURL: BASE_URL\n});\nexport const privateAxios = axios.create({\n  baseURL: BASE_URL\n});\n\n// privateAxios.interceptors.request.use(\n//   (config) => {\n//     const token = getToken();\n\n//     if (token) {\n//       config.headers.common.Authorization = `Bearer ${token}`;\n//       // console.log(config);\n//     }\n\n//     return config;\n//   },\n//   (error) => Promise.reject(error)\n// );","map":{"version":3,"names":["axios","BASE_URL","myAxios","create","baseURL","privateAxios"],"sources":["D:/LAVI/Blog FSD/frontend/blogzilla_frontend/src/services/helper.js"],"sourcesContent":["import axios from \"axios\";\r\n//import { getToken } from \"../auth\";\r\n\r\nexport const BASE_URL = \"http://localhost:9090/api\";\r\n\r\nexport const myAxios = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\nexport const privateAxios = axios.create({\r\n  baseURL: BASE_URL,\r\n});\r\n\r\n// privateAxios.interceptors.request.use(\r\n//   (config) => {\r\n//     const token = getToken();\r\n\r\n//     if (token) {\r\n//       config.headers.common.Authorization = `Bearer ${token}`;\r\n//       // console.log(config);\r\n//     }\r\n\r\n//     return config;\r\n//   },\r\n//   (error) => Promise.reject(error)\r\n// );"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB;;AAEA,OAAO,MAAMC,QAAQ,GAAG,2BAA2B;AAEnD,OAAO,MAAMC,OAAO,GAAGF,KAAK,CAACG,MAAM,CAAC;EAClCC,OAAO,EAAEH;AACX,CAAC,CAAC;AAEF,OAAO,MAAMI,YAAY,GAAGL,KAAK,CAACG,MAAM,CAAC;EACvCC,OAAO,EAAEH;AACX,CAAC,CAAC;;AAEF;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}