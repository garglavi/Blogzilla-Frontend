{"ast":null,"code":"var _jsxFileName = \"D:\\\\LAVI\\\\Blog FSD\\\\frontend\\\\blogzilla_frontend\\\\src\\\\pages\\\\user-routes\\\\Userdashboard.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport AddPost from '../../components/AddPost';\nimport Base from '../../components/Base';\nimport { Container } from 'reactstrap';\n//import NewFeed from '../../components/NewFeed'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport { getCurrentUserDetail } from '../../auth';\nimport { deletePostService, loadPostUserWise } from '../../services/post-service';\nimport { toast } from 'react-toastify';\nimport Post from '../../components/Post';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Userdashboard = () => {\n  _s();\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    console.log(getCurrentUserDetail());\n    setUser(getCurrentUserDetail());\n    loadPostData();\n  }, []);\n  function loadPostData() {\n    loadPostUserWise(getCurrentUserDetail().id).then(data => {\n      console.log(data);\n      setPosts([...data]);\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"error in loading user posts\");\n    });\n  }\n\n  //function to delete post\n\n  function deletePost(post) {\n    //going to delete post\n    console.log(post);\n    deletePostService(post.postId).then(res => {\n      console.log(res);\n      toast.success(\"post is deleled..\");\n      let newPosts = posts.filter(p => p.postId !== post.postId);\n      setPosts([...newPosts]);\n    }).catch(error => {\n      console.log(error);\n      toast.error(\"error in deleting post\");\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(Base, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(AddPost, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"my-3\",\n        children: [\"Posts Count : (\", posts.length, \")\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), posts.map((post, index) => {\n        return /*#__PURE__*/_jsxDEV(Post, {\n          post: post,\n          deletePost: deletePost\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n_s(Userdashboard, \"ZVEuDD1sogWGdBzQ5U8JWaIRh1E=\");\n_c = Userdashboard;\nexport default Userdashboard;\nvar _c;\n$RefreshReg$(_c, \"Userdashboard\");","map":{"version":3,"names":["React","AddPost","Base","Container","useState","useEffect","getCurrentUserDetail","deletePostService","loadPostUserWise","toast","Post","jsxDEV","_jsxDEV","Userdashboard","_s","user","setUser","posts","setPosts","console","log","loadPostData","id","then","data","catch","error","deletePost","post","postId","res","success","newPosts","filter","p","children","fileName","_jsxFileName","lineNumber","columnNumber","className","length","map","index","_c","$RefreshReg$"],"sources":["D:/LAVI/Blog FSD/frontend/blogzilla_frontend/src/pages/user-routes/Userdashboard.jsx"],"sourcesContent":["import React from 'react'\r\nimport AddPost from '../../components/AddPost'\r\nimport Base from '../../components/Base'\r\nimport { Container } from 'reactstrap'\r\n//import NewFeed from '../../components/NewFeed'\r\nimport { useState } from 'react'\r\nimport { useEffect } from 'react'\r\nimport { getCurrentUserDetail } from '../../auth'\r\nimport { deletePostService, loadPostUserWise } from '../../services/post-service'\r\nimport { toast } from 'react-toastify'\r\nimport Post from '../../components/Post'\r\nconst Userdashboard = () => {\r\n\r\n  const [user, setUser] = useState({})\r\n  const [posts, setPosts] = useState([])\r\n  useEffect(() => {\r\n    console.log(getCurrentUserDetail());\r\n    setUser(getCurrentUserDetail())\r\n    loadPostData()\r\n\r\n  }, [])\r\n\r\n  function loadPostData() {\r\n    loadPostUserWise(getCurrentUserDetail().id).then(data => {\r\n      console.log(data)\r\n      setPosts([...data])\r\n    })\r\n      .catch(error => {\r\n        console.log(error)\r\n        toast.error(\"error in loading user posts\")\r\n      })\r\n  }\r\n\r\n  //function to delete post\r\n\r\n  function deletePost(post) {\r\n    //going to delete post\r\n    console.log(post)\r\n\r\n    deletePostService(post.postId).then(res => {\r\n      console.log(res)\r\n      toast.success(\"post is deleled..\")\r\n      let newPosts = posts.filter(p => p.postId !== post.postId)\r\n      setPosts([...newPosts])\r\n\r\n    })\r\n      .catch(error => {\r\n        console.log(error)\r\n        toast.error(\"error in deleting post\")\r\n      })\r\n  }\r\n\r\n\r\n  return (\r\n\r\n    <Base>\r\n      <Container>\r\n        <AddPost />\r\n\r\n        <h1 className='my-3'>Posts Count : ({posts.length})</h1>\r\n\r\n        {posts.map((post, index) => {\r\n          return (\r\n            <Post post={post} deletePost={deletePost} key={index} />\r\n          )\r\n        })}\r\n      </Container>\r\n    </Base>\r\n\r\n  )\r\n}\r\n\r\nexport default Userdashboard"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}