{"ast":null,"code":"import { privateAxios } from \"./helper\";\nimport { myAxios } from \"./helper\";\n//create post function\nexport const createPost = postData => {\n  //   console.log(postData);\n  return privateAxios.post(`/user/${postData.userId}/category/${postData.categoryId}/posts`, postData).then(response => response.data);\n};\n\n//get all posts\n\nexport const loadAllPosts = (pageNumber, pageSize) => {\n  return myAxios.get(`/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=addedDate&sortDir=desc`).then(response => response.data);\n};\n\n//load single post of given id\nexport const loadPost = postId => {\n  return myAxios.get(\"/posts/\" + postId).then(reponse => reponse.data);\n};\nexport const createComment = (comment, postId) => {\n  return privateAxios.post(`/post/${postId}/comments`, comment);\n};\n\n//upload post banner image\n\nexport const uploadPostImage = (image, postId) => {\n  let formData = new FormData();\n  formData.append(\"image\", image);\n  return privateAxios.post(`/post/image/upload/${postId}`, formData, {\n    headers: {\n      \"Content-Type\": \"multipart/form-data\"\n    }\n  }).then(response => response.data);\n};\n\n//get cateory wise posts\nexport function loadPostCategoryWise(categoryId) {\n  return privateAxios.get(`/category/${categoryId}/posts`).then(res => res.data);\n}\nexport function loadPostUserWise(userId) {\n  return privateAxios.get(`/user/${userId}/posts`).then(res => res.data);\n}\n\n//delete post\nexport function deletePostService(postId) {\n  return privateAxios.delete(`/posts/${postId}`).then(res => res.data);\n}\n\n//update post\nexport function updatePost(post, postId) {\n  console.log(post);\n  return privateAxios.put(`/posts/${postId}`, post).then(resp => resp.data);\n}","map":{"version":3,"names":["privateAxios","myAxios","createPost","postData","post","userId","categoryId","then","response","data","loadAllPosts","pageNumber","pageSize","get","loadPost","postId","reponse","createComment","comment","uploadPostImage","image","formData","FormData","append","headers","loadPostCategoryWise","res","loadPostUserWise","deletePostService","delete","updatePost","console","log","put","resp"],"sources":["D:/LAVI/Blog FSD/frontend/blogzilla_frontend/src/services/post-service.js"],"sourcesContent":["import { privateAxios } from \"./helper\";\r\nimport { myAxios } from \"./helper\";\r\n//create post function\r\nexport const createPost = (postData) => {\r\n  //   console.log(postData);\r\n  return privateAxios\r\n    .post(\r\n      `/user/${postData.userId}/category/${postData.categoryId}/posts`,\r\n      postData\r\n    )\r\n    .then((response) => response.data);\r\n};\r\n\r\n//get all posts\r\n\r\nexport const loadAllPosts = (pageNumber, pageSize) => {\r\n  return myAxios\r\n    .get(\r\n      `/posts?pageNumber=${pageNumber}&pageSize=${pageSize}&sortBy=addedDate&sortDir=desc`\r\n    )\r\n    .then((response) => response.data);\r\n};\r\n\r\n//load single post of given id\r\nexport const loadPost = (postId) => {\r\n  return myAxios.get(\"/posts/\" + postId).then((reponse) => reponse.data);\r\n};\r\n\r\nexport const createComment = (comment, postId) => {\r\n  return privateAxios.post(`/post/${postId}/comments`, comment);\r\n};\r\n\r\n//upload post banner image\r\n\r\nexport const uploadPostImage = (image, postId) => {\r\n  let formData = new FormData();\r\n  formData.append(\"image\", image);\r\n  return privateAxios\r\n    .post(`/post/image/upload/${postId}`, formData, {\r\n      headers: {\r\n        \"Content-Type\": \"multipart/form-data\",\r\n      },\r\n    })\r\n    .then((response) => response.data);\r\n};\r\n\r\n//get cateory wise posts\r\nexport function loadPostCategoryWise(categoryId) {\r\n  return privateAxios\r\n    .get(`/category/${categoryId}/posts`)\r\n    .then((res) => res.data);\r\n}\r\n\r\nexport function loadPostUserWise(userId) {\r\n  return privateAxios.get(`/user/${userId}/posts`).then((res) => res.data);\r\n}\r\n\r\n//delete post\r\nexport function deletePostService(postId) {\r\n  return privateAxios.delete(`/posts/${postId}`).then((res) => res.data);\r\n}\r\n\r\n//update post\r\nexport function updatePost(post, postId) {\r\n  console.log(post);\r\n  return privateAxios.put(`/posts/${postId}`, post).then((resp) => resp.data);\r\n}"],"mappings":"AAAA,SAASA,YAAY,QAAQ,UAAU;AACvC,SAASC,OAAO,QAAQ,UAAU;AAClC;AACA,OAAO,MAAMC,UAAU,GAAIC,QAAQ,IAAK;EACtC;EACA,OAAOH,YAAY,CAChBI,IAAI,CACF,SAAQD,QAAQ,CAACE,MAAO,aAAYF,QAAQ,CAACG,UAAW,QAAO,EAChEH,QACF,CAAC,CACAI,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;;AAEA,OAAO,MAAMC,YAAY,GAAGA,CAACC,UAAU,EAAEC,QAAQ,KAAK;EACpD,OAAOX,OAAO,CACXY,GAAG,CACD,qBAAoBF,UAAW,aAAYC,QAAS,gCACvD,CAAC,CACAL,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,MAAMK,QAAQ,GAAIC,MAAM,IAAK;EAClC,OAAOd,OAAO,CAACY,GAAG,CAAC,SAAS,GAAGE,MAAM,CAAC,CAACR,IAAI,CAAES,OAAO,IAAKA,OAAO,CAACP,IAAI,CAAC;AACxE,CAAC;AAED,OAAO,MAAMQ,aAAa,GAAGA,CAACC,OAAO,EAAEH,MAAM,KAAK;EAChD,OAAOf,YAAY,CAACI,IAAI,CAAE,SAAQW,MAAO,WAAU,EAAEG,OAAO,CAAC;AAC/D,CAAC;;AAED;;AAEA,OAAO,MAAMC,eAAe,GAAGA,CAACC,KAAK,EAAEL,MAAM,KAAK;EAChD,IAAIM,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC7BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEH,KAAK,CAAC;EAC/B,OAAOpB,YAAY,CAChBI,IAAI,CAAE,sBAAqBW,MAAO,EAAC,EAAEM,QAAQ,EAAE;IAC9CG,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC,CACDjB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,IAAI,CAAC;AACtC,CAAC;;AAED;AACA,OAAO,SAASgB,oBAAoBA,CAACnB,UAAU,EAAE;EAC/C,OAAON,YAAY,CAChBa,GAAG,CAAE,aAAYP,UAAW,QAAO,CAAC,CACpCC,IAAI,CAAEmB,GAAG,IAAKA,GAAG,CAACjB,IAAI,CAAC;AAC5B;AAEA,OAAO,SAASkB,gBAAgBA,CAACtB,MAAM,EAAE;EACvC,OAAOL,YAAY,CAACa,GAAG,CAAE,SAAQR,MAAO,QAAO,CAAC,CAACE,IAAI,CAAEmB,GAAG,IAAKA,GAAG,CAACjB,IAAI,CAAC;AAC1E;;AAEA;AACA,OAAO,SAASmB,iBAAiBA,CAACb,MAAM,EAAE;EACxC,OAAOf,YAAY,CAAC6B,MAAM,CAAE,UAASd,MAAO,EAAC,CAAC,CAACR,IAAI,CAAEmB,GAAG,IAAKA,GAAG,CAACjB,IAAI,CAAC;AACxE;;AAEA;AACA,OAAO,SAASqB,UAAUA,CAAC1B,IAAI,EAAEW,MAAM,EAAE;EACvCgB,OAAO,CAACC,GAAG,CAAC5B,IAAI,CAAC;EACjB,OAAOJ,YAAY,CAACiC,GAAG,CAAE,UAASlB,MAAO,EAAC,EAAEX,IAAI,CAAC,CAACG,IAAI,CAAE2B,IAAI,IAAKA,IAAI,CAACzB,IAAI,CAAC;AAC7E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}